<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Nullable>enable</Nullable>
		<LangVersion>10.0</LangVersion>
		<WarningsAsErrors>nullable</WarningsAsErrors>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>

		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>true</IncludeSymbols>

		<!-- Include symbol files (*.pdb) in the built .nupkg -->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

		<Author>Arlo Godfrey</Author>
		<Version>0.3.1</Version>
		<Product>OwlCore</Product>
		<Description>Coordinated, high-latency IPoAC == A bad hard drive comprised entirely of Owls (see rfc6214)
		
		This package enables early adoption of CommunityToolkit.Storage, a proposed package in Toolkit Labs, eventually to end up in CommunityToolkit/dotnet on GitHub. 
    </Description>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
		<PackageIcon>logo.png</PackageIcon>
		<PackageReleaseNotes>
--- 0.3.2 ---
[Fixes]
Fixed SystemFolder not extracting the folder name from the path correctly.
Fixed SystemFile.OpenStreamAsync failing when call on a file returned from System.CreateFileAsync
Fixed an issue with SystemFileWatcher where it couldn't reliably determine if an arbitrary path is a File or a Folder.

--- 0.3.1 ---
[Fixes]
Fixed a crash that may occur when calling SystemFolder.CreateCopyOfAsync, when the stream of the file being copied doesn't support seeking.

--- 0.3.0 ---
[New]
Added MemoryFile and MemoryFolder under OwlCore.Storage.Memory.

--- 0.2.0 ---
THIS IS A BREAKING RELEASE.
Update asap, and do not use older versions.
We will switch to pure semver2.0 once a stable 1.0.0 released is made.

[Breaking]
Due to the wildly different strategies that could be used for generic recursive folder moving/copying, IModifiableFolder.CreateCopyOfAsync and IModifiableFolder.MoveFromAsync now exclusively handle files. This may be added back later as a fast-path interface + extension method.

A new property has been added to the IFolderWatcher interface. Supplying the folder which is being observed is now a requirement. The "sender" in the INotifyCollectionChanged handler should be the watcher instead of the folder, meaning the folder can't be accessed from event handlers unless the watcher supplies it. 

[New]
OwlCore.Storage.SimpleStorableItem has been added, a minimum possible implementation of IStorable. This is useful in scenarios when you need to identify a resource but shouldn't supply any access to it, such as when a file or folder is removed.

We've started adding inbox interface implementations, starting with System.IO, under the namespace OwlCore.Storage.SystemIO.

--- 0.1.0 ---
[New]
Added all missing interfaces and extension methods from proposal.
      
--- 0.0.0 ---
[New]
Initial release of OwlCore.Storage.
		</PackageReleaseNotes>
		<DebugType>embedded</DebugType>
		<NeutralLanguage>en</NeutralLanguage>
		<Authors>Arlo Godfrey</Authors>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Optimize>true</Optimize>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
		<Deterministic>true</Deterministic>
	</PropertyGroup>

	<ItemGroup>
		<None Include="LICENSE.txt">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
		<PackageReference Include="System.Linq.Async" Version="6.0.1" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="logo.png">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>
</Project>