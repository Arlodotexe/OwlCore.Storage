<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<Nullable>enable</Nullable>
		<LangVersion>10.0</LangVersion>
		<WarningsAsErrors>nullable</WarningsAsErrors>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>

		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>true</IncludeSymbols>

		<!-- Include symbol files (*.pdb) in the built .nupkg -->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

		<Author>Arlo Godfrey</Author>
		<Version>0.8.0</Version>
		<Product>OwlCore</Product>
		<Description>Coordinated, high-latency IPoAC == A bad hard drive comprised entirely of Owls (see rfc6214).
		
		This package enables early adoption of CommunityToolkit.Storage, a proposed package in Toolkit Labs, eventually to end up in CommunityToolkit/dotnet on GitHub. 
    </Description>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
		<PackageIcon>logo.png</PackageIcon>
		<PackageReleaseNotes>
--- 0.8.0 ---
THIS IS A BREAKING RELEASE
Update asap, and do not use older versions or implementations.

[Breaking]
Renamed IStorageProperties{T} to IStorageProperty{T}.
Path was removed from IAddressableStorable. This was not spec'd or standardized, and simply exposed the "path" used by the underlying implementation, so we removed it.
IAddressableStorable was renamed to IStorableChild, as the only thing on the interface is now GetParentAsync.
IAddressableFolder was renamed to IChildFolder.
IAddressableFile was renamed to IChildFile.
IFolderCanFastGetItem was renamed to IFastGetItem.
The interface IFolderCanFastGetFirstItemByName has been renamed to IFastGetFirstByName.
The extension method and interface method GetFirstItemByNameAsync has been shortened to GetFirstByNameAsync.
IModifiableFolder no longer requires implementing copy/move operations.
The constructor for HttpFile now only has 1 parameter - the Uri.
HttpFile.Name is now an init-only setter.
HttpFile.Id is no longer customizable, and is always created from the provided Uri instead.

[New]
Added IFastFileCopy{T} and IFastFileMove{T}.
Added FolderExtensions.CreateCopyOfAsync{T}.
Added FolderExtensions.MoveFromAsync{T}.

--- 0.7.1 ---
[Fix]
Fixed an issue where providing only a Uri for HttpFile would yield an incorrect file name.

--- 0.7.0 ---
[New]
Added the IFolder.GetFirstItemByNameAsync extension method and the IFolderCanFastGetFirstItemByName interface. Contributed by @yoshiask@github.com.

--- 0.6.1 ---
[Fixes]
Removed leading separator in ZIP archive IDs. Contributed by @yoshiask@github.com.
Fixed ReadOnlyZipArchiveFolder not recognizing existing virtual folders. Contributed by @yoshiask@github.com.

--- 0.6.0 ---
[New]
Added OwlCore.Storage.StreamFile, a file implementation that presents a provided stream as file content.
Added OwlCore.Storage.HttpFile, a file implementation which calls GET on a provided HTTP URL and returns it as file content.
Added OwlCore.Storage.Archive namespace, and new implementations for reading and writing a Zip archive from a file. Contributed by @yoshiask@github.com.

[Improvements]
Added new constructor to MemoryFile that requires only a MemoryStream, no Id or Name. These are calculated from the stream's hash code instead.

--- 0.5.3 ---
[Fixes]
Fixed an issue in SystemFolder where deleting a folder that has children would throw instead of deleting recursively.

[Improvements]
Updated testing dependencies.

--- 0.5.2 ---
[Fixes]
Fixed several bugs in MemoryFolder and SystemFolder regarding overwrite behavior.

[Improvements]
Updated downstream NuGet packages
Wrote basic CommonTests for IModifiableFolder

--- 0.5.1 ---
[Fixes]
Fixed an issue in MemoryFolder and SystemFolder where calling CreateFileAsync and CreateFolderAsync with overwrite set to false wouldn't return an existing storable.

--- 0.5.0 ---
THIS IS A BREAKING RELEASE
Update asap, and do not use older versions.

[Breaking]
Items in a folder always have a parent, so they're always addressable. We've updated the interfaces and inbox implementations to reflect this.

IFolder.GetItemsAsync() now returns IAddressableStorable instead of IStorable.
IModifiableFolder.CreateCopyOfAsync now returns IAddressableFile instead of IFile.
IModifiableFolder.MoveFromAsync now returns IAddressableFile instead of IFile.
IModifiableFolder.MoveFromAsync now takes IAddressableFile instead of IFile as the first parameter.
IModifiableFolder.CreateFileAsync now returns IAddressableFile instead of IFile.
IModifiableFolder.CreateFolderAsync now returns IAddressableFolder instead of IFolder.
IModifiableFolder.DeleteAsync now takes IAddressableStorable instead of IStorable as the first parameter.

--- 0.4.0 ---
THIS IS A BREAKING RELEASE
Update asap, and do not use older versions.

[Breaking]
IAddressableStorable.GetParentAsync() now returns IFolder? instead of IAddressableFolder?. Any type of folder could yield an IAddressableStorable, so we've made sure the parent of any IAddressableStorable can be any type of folder.

To migrate, simply change the return type of IAddressableStorable.GetParentAsync() to IFolder? in your implementations. No other changes are required.

--- 0.3.2 ---
[Fixes]
Fixed SystemFolder not extracting the folder name from the path correctly.
Fixed SystemFile.OpenStreamAsync failing when call on a file returned from System.CreateFileAsync
Fixed an issue with SystemFileWatcher where it couldn't reliably determine if an arbitrary path is a File or a Folder.

--- 0.3.1 ---
[Fixes]
Fixed a crash that may occur when calling SystemFolder.CreateCopyOfAsync, when the stream of the file being copied doesn't support seeking.

--- 0.3.0 ---
[New]
Added MemoryFile and MemoryFolder under OwlCore.Storage.Memory.

--- 0.2.0 ---
THIS IS A BREAKING RELEASE.
Update asap, and do not use older versions.
We will switch to pure semver2.0 once a stable 1.0.0 released is made.

[Breaking]
Due to the wildly different strategies that could be used for generic recursive folder moving/copying, IModifiableFolder.CreateCopyOfAsync and IModifiableFolder.MoveFromAsync now exclusively handle files. This may be added back later as a fast-path interface + extension method.

A new property has been added to the IFolderWatcher interface. Supplying the folder which is being observed is now a requirement. The "sender" in the INotifyCollectionChanged handler should be the watcher instead of the folder, meaning the folder can't be accessed from event handlers unless the watcher supplies it. 

[New]
OwlCore.Storage.SimpleStorableItem has been added, a minimum possible implementation of IStorable. This is useful in scenarios when you need to identify a resource but shouldn't supply any access to it, such as when a file or folder is removed.

We've started adding inbox interface implementations, starting with System.IO, under the namespace OwlCore.Storage.SystemIO.

--- 0.1.0 ---
[New]
Added all missing interfaces and extension methods from proposal.
      
--- 0.0.0 ---
[New]
Initial release of OwlCore.Storage.
		</PackageReleaseNotes>
		<DebugType>embedded</DebugType>
		<NeutralLanguage>en</NeutralLanguage>
		<Authors>Arlo Godfrey</Authors>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<DebugType>full</DebugType>
		<DebugSymbols>true</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Optimize>true</Optimize>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
		<Deterministic>true</Deterministic>
	</PropertyGroup>

	<ItemGroup>
		<None Include="LICENSE.txt">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
    <InternalsVisibleTo Include="OwlCore.Storage.Tests" />
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="7.0.0" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
		<PackageReference Include="PolySharp" Version="1.12.1">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="System.Linq.Async" Version="6.0.1" />
	</ItemGroup>

	<ItemGroup>
	  <None Update="logo.png">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>
</Project>